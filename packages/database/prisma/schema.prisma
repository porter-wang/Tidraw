generator client {
    provider = "prisma-client-js"
    output   = "../src/generated"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(cuid())
    email     String   @unique
    name      String
    avatar    String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    sessions    Session[]
    ownedRooms  Room[]       @relation("RoomOwner")
    roomMembers RoomMember[]

    @@map("users")
}

model Session {
    id        String   @id @default(cuid())
    userId    String
    expiresAt DateTime
    createdAt DateTime @default(now())

    // Relations
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@map("sessions")
}

model Room {
    id        String   @id @default(cuid())
    name      String
    ownerId   String
    isPublic  Boolean  @default(false)
    snapshot  Json? // Store tldraw document snapshots
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Relations
    owner   User         @relation("RoomOwner", fields: [ownerId], references: [id], onDelete: Cascade)
    members RoomMember[]

    @@map("rooms")
}

model RoomMember {
    roomId   String
    userId   String
    role     RoomRole @default(VIEWER)
    joinedAt DateTime @default(now())

    // Relations
    room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@id([roomId, userId])
    @@map("room_members")
}

enum RoomRole {
    OWNER
    EDITOR
    VIEWER
}
